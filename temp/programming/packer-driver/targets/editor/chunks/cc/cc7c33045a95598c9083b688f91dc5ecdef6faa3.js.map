{"version":3,"sources":["file:///E:/cocos/project/CrazyGame/assets/res/scripts/Panel/GamePanel.ts"],"names":["_decorator","Component","instantiate","Label","Node","ProgressBar","clientEvent","BattleManager","CardManager","Card","FigthManager","ccclass","property","GamePanel","cardNodeList","onEnable","on","initBattleInfo","initCardInfo","updateCard","updateEnemyInfo","node","EventType","TOUCH_START","_onTouchStart","TOUCH_MOVE","_onTouchMove","TOUCH_CANCEL","_onTouchCancel","TOUCH_END","_onTouchEnd","event","console","log","instance","chooseCards","length","touchStart","touchMove","touchEnd","onDisable","off","updateRoleinfo","battleInfo","curreentHp","maxHp","hp","txtMyHp","string","toString","por","myHpPro","progress","enemyBattleInfo","txtDfHp","dfHpPro","cardArray","i","card","cardinfo","cardInfo","updatteData","checkCardinfo","info","initData","creatCard","init","initCardView","maxCount","maxCardCount","cardList","removeAllChildren","getComponent","setIndex","addChild","push"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventTouch, instantiate, Label, Node, ProgressBar } from 'cc';\r\nimport { clientEvent } from '../utils/clientEvent';\r\nimport { BattleManager } from '../manager/BattleManager';\r\nimport { CardManager } from '../manager/CardManager';\r\nimport { Card } from './Card';\r\nimport { FigthManager } from '../manager/FigthManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GamePanel')\r\nexport class GamePanel extends Component {\r\n    //敌方信息\r\n    @property(Label)\r\n    txtDfHp: Label = null!;\r\n    @property(ProgressBar)\r\n    dfHpPro: ProgressBar = null!;\r\n\r\n    @property(Label)\r\n    txtMyHp: Label = null!;\r\n    @property(ProgressBar)\r\n    myHpPro: ProgressBar = null!;\r\n\r\n    @property(Node)\r\n    cardList: Node = null!;\r\n\r\n    @property(Node)\r\n    card: Node = null!;\r\n\r\n    private cardNodeList = []\r\n\r\n    protected onEnable(): void {\r\n        clientEvent.on(\"InitBattleInfo\", this.initBattleInfo, this)\r\n        clientEvent.on(\"InitCardInfo\", this.initCardInfo, this)\r\n        clientEvent.on(\"UpdateCard\", this.updateCard, this)\r\n        clientEvent.on(\"UpdateEnemyHp\",this.updateEnemyInfo,this)\r\n        this.node.on(Node.EventType.TOUCH_START, this._onTouchStart, this);\r\n        this.node.on(Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\r\n        this.node.on(Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);\r\n        this.node.on(Node.EventType.TOUCH_END, this._onTouchEnd, this);\r\n\r\n    }\r\n\r\n    protected _onTouchStart(event: EventTouch) {\r\n\r\n        console.log(\"鼠标点击\")\r\n\r\n        if (CardManager.instance.chooseCards.length > 0) {\r\n            FigthManager.instance.touchStart(event);\r\n        }\r\n    }\r\n\r\n    protected _onTouchMove(event: EventTouch) {\r\n        console.log(\"鼠标移动\")\r\n        if (CardManager.instance.chooseCards.length > 0) {\r\n            FigthManager.instance.touchMove(event);\r\n        }\r\n    }\r\n\r\n    protected _onTouchCancel(event: EventTouch) {\r\n        console.log(\"鼠标结束\")\r\n        if (CardManager.instance.chooseCards.length > 0) {\r\n            FigthManager.instance.touchEnd(event);\r\n        }\r\n    }\r\n\r\n    protected _onTouchEnd(event: EventTouch) {\r\n        if (CardManager.instance.chooseCards.length > 0) {\r\n            FigthManager.instance.touchEnd(event);\r\n        }\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        clientEvent.off(\"InitCardInfo\", this.initCardInfo, this)\r\n        clientEvent.off(\"InitBattleInfo\", this.initBattleInfo, this)\r\n        clientEvent.off(\"UpdateCard\", this.updateCard, this)\r\n        clientEvent.off(\"UpdateEnemyHp\",this.updateEnemyInfo,this)\r\n        this.node.off(Node.EventType.TOUCH_START, this._onTouchStart, this);\r\n        this.node.off(Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\r\n        this.node.off(Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);\r\n        this.node.off(Node.EventType.TOUCH_END, this._onTouchEnd, this);\r\n    }\r\n\r\n    private initBattleInfo() {\r\n        this.updateEnemyInfo();\r\n        this.updateRoleinfo();\r\n    }\r\n\r\n    private updateRoleinfo() {\r\n        let battleInfo = BattleManager.instance.battleInfo;\r\n        let curreentHp = battleInfo.curreentHp;\r\n        let maxHp = battleInfo.hp;\r\n\r\n        this.txtMyHp.string = curreentHp.toString();\r\n        let por = curreentHp / maxHp;\r\n        this.myHpPro.progress = por\r\n    }\r\n\r\n    private updateEnemyInfo() {\r\n        let enemyBattleInfo = BattleManager.instance.enemyBattleInfo;\r\n        let curreentHp = enemyBattleInfo.curreentHp;\r\n        let maxHp = enemyBattleInfo.hp;\r\n\r\n        this.txtDfHp.string = curreentHp.toString();\r\n        this.dfHpPro.progress = curreentHp / maxHp;\r\n    }\r\n    private updateCard() {\r\n        let cardArray = CardManager.instance.cardArray;\r\n        for (let i = 0; i <this.cardNodeList.length; i++) {\r\n            let card = this.cardNodeList[i];\r\n            let cardinfo = cardArray[i];\r\n            if (card.cardInfo == null || cardinfo==null) {\r\n                card.updatteData(cardinfo);\r\n            }\r\n            if (i == this.cardNodeList.length - 1) {\r\n                this.checkCardinfo();\r\n            }\r\n        }\r\n    }\r\n\r\n    public initCardInfo() {\r\n        let cardInfo = CardManager.instance.cardArray;\r\n        for (let i = 0; i < cardInfo.length; i++) {\r\n            let info = cardInfo[i];\r\n            this.cardNodeList[i].initData(i, info)\r\n        }\r\n        this.checkCardinfo();\r\n    }\r\n\r\n    public checkCardinfo() {\r\n        for (let i = 0; i < this.cardNodeList.length; i++) {\r\n            let card = this.cardNodeList[i];\r\n            if (card) {\r\n                if (!card.cardInfo) {\r\n                    card.creatCard(i)\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public init() {\r\n        this.initCardView();\r\n    }\r\n\r\n    private initCardView() {\r\n        this.cardNodeList = [];\r\n        let maxCount = CardManager.maxCardCount;\r\n        this.cardList.removeAllChildren();\r\n        for (let i = 0; i < maxCount; i++) {\r\n            let node = instantiate(this.card);\r\n            let card: Card = node.getComponent(Card);\r\n            card.init()\r\n            card.setIndex(i);\r\n            this.cardList.addChild(node);\r\n            this.cardNodeList.push(card);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}