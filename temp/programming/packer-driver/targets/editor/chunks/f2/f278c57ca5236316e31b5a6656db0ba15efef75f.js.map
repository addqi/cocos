{"version":3,"sources":["file:///E:/cocos/project/CrazyGame/assets/script/Solider.ts"],"names":["_decorator","Component","Vec3","SoliderModel","BattleManager","ccclass","property","Solider","_index","_team","_cardInfo","_startPos","speed","_target","_damage","_isAttack","direction","currentPos","forward","coolTime","start","update","deltaTime","init","index","team","pos","cardInfo","node","setPosition","eulerAngles","_model","children","_fightModel","getComponent","updateInfo","playAni","_findEnemy","instance","_gameManger","getWallNode","console","log","lateUpdate","dt","targetPos","getPosition","clone","offset","subtract","diss","Math","floor","length","soliderAttack","set","x","random","z","y","normalize","multiplyScalar","position","add","onDamege"],"mappings":"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","sourcesContent":["import { _decorator, animation, Component, find, game, Node, SkeletalAnimation, TiledObjectGroup, Vec3, Vec4 } from 'cc';\r\nimport { SoliderModel } from './battle/SoliderModel';\r\nimport { GameManager } from './manager/GameManager';\r\nimport { BattleManager } from './manager/BattleManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Solider')\r\nexport class Solider extends Component {\r\n    private _index:number = 0;//小兵编号\r\n    private _team:number = 0;//小兵队伍\r\n    private _cardInfo:any = {};//\r\n    private _startPos:Vec3 = new Vec3();//小兵初始位置\r\n    private speed:number = 3;//小兵移动速度\r\n    private _target:Node = null;//移动目标\r\n    private _damage:number = 50;//小兵攻击力\r\n    // @property(Node)\r\n    // model: Node = null;\r\n    // @property(SkeletalAnimation)\r\n    // animation: SkeletalAnimation = null;\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n    // 初始化\r\n    init(index:number,team:number,pos: Vec3,cardInfo){\r\n        this.node.setPosition(pos);\r\n        this._startPos=pos;\r\n        this._index = index;\r\n        this._team = team;\r\n        this._cardInfo = cardInfo;//获取卡牌信息 \r\n\r\n        // 小兵队伍\r\n        if(team == 1){\r\n            this.node.eulerAngles=new Vec3(0,180,0);\r\n            // this.node.scale=new Vec3(-1*this.node.scale.x,this.node.scale.y,this.node.scale.z);\r\n        }\r\n        else if(team == 2){\r\n        }\r\n        let  _model=this.node.children[0];\r\n        let _fightModel=_model.getComponent(SoliderModel);\r\n        _fightModel.updateInfo(this);\r\n        _fightModel.playAni(\"run\",true);\r\n        this._findEnemy();\r\n    }\r\n\r\n    public get team(){\r\n        return this._team;\r\n    }\r\n// 找到敌人\r\n    private _findEnemy(){\r\n        this._target=BattleManager.instance._gameManger.getWallNode(this._team);\r\n        if(this._target){\r\n            console.log(\"找到敌人\");\r\n        }\r\n    }\r\nprivate _isAttack:boolean=false;\r\nprivate direction:Vec3=new Vec3();\r\nprivate currentPos:Vec3=new Vec3();//当前位置\r\nprivate forward:Vec3=new Vec3();\r\nprivate coolTime:number=0;\r\n    protected lateUpdate(dt: number): void {\r\n        if(this._target){\r\n            let targetPos=this._target.getPosition().clone();\r\n            let offset=targetPos.subtract(this.node.getPosition().clone());\r\n            let diss=Math.floor(offset.length());\r\n            // console.log(\"diss距离是:\"+diss);\r\n            if(diss<= 1.5)\r\n            {\r\n                this.soliderAttack(dt);\r\n            }\r\n            else \r\n            {\r\n                this.node.children[0].getComponent(SoliderModel).playAni(\"run\",true);\r\n\r\n                // console.log(\"不在攻击范围内:\");\r\n                // this._isAttack = false;\r\n                \r\n                this.direction.set(offset);\r\n                this.direction.x += Math.floor(Math.random()*0.2)-0.1;\r\n                this.direction.z += Math.floor(Math.random()*0.2)-0.1;\r\n                this.direction.y = 0;\r\n                this.direction.normalize();\r\n                let forward:Vec3=new Vec3();\r\n                forward.set(this.direction);\r\n                forward.normalize();\r\n                // this.node.forward = forward;\r\n                // this.node.eulerAngles=new Vec3(0,180,0);\r\n\r\n                this.forward = forward;\r\n\r\n                this.direction = this.direction.multiplyScalar(this.speed/100);\r\n                this.direction.y = 0;\r\n                this.currentPos.set(this.node.position);\r\n                this.currentPos.add(this.direction);\r\n                this.node.position = this.currentPos;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n  // Solider.ts\r\nprivate soliderAttack(dt: number) {\r\n    this.node.position = this.currentPos; // 恢复位置\r\n    if (this.coolTime > 0 && !this._isAttack) {\r\n        this.node.children[0].getComponent(SoliderModel).playAni(\"idle\", true);\r\n        this.coolTime -= dt;\r\n    } else if (this.coolTime <= 0) {\r\n        this._isAttack = true;\r\n        // 播放攻击动画，并在完成后切换回 idle\r\n        this.node.children[0].getComponent(SoliderModel).playAni(\"attack\", false, () => {\r\n            this._isAttack = false;\r\n            console.log(\"攻击动画完成\");\r\n            if(this._target){\r\n                BattleManager.instance.onDamege(this._damage,this._team);\r\n            }\r\n            // 攻击完成后强制切换回 idle\r\n            this.node.children[0].getComponent(SoliderModel).playAni(\"idle\", true);\r\n        });\r\n        this.coolTime = 0.5;\r\n    }\r\n}\r\n    \r\n}\r\n\r\n\r\n"]}