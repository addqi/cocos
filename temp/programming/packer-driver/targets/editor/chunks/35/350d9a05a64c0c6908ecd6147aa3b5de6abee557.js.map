{"version":3,"sources":["file:///E:/cocos/project/CrazyGame/assets/res/scripts/manager/CardManager.ts"],"names":["CardInfo","_decorator","clientEvent","ccclass","property","CardManager","dicPanel","cardArray","chooseCards","instance","_instance","initCardArray","dispatchEvent","creatCardInfo","arr","length","maxCardCount","cardInfo","type","uid","Date","now","Math","random","push","updateChooseCard","isChoose","i","item","splice","updateCard","haveCardArr","info","j","haveCardInfo"],"mappings":";;;wGA+EaA,Q;;;;;;;;;;;;;;;AA/EJC,MAAAA,U,OAAAA,U;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;6BAGjBI,W,WADZF,OAAO,CAAC,aAAD,C,2BAAR,MACaE,WADb,CACyB;AAAA;AAAA,eACbC,QADa,GACF,EADE;AAAA,eAYdC,SAZc,GAYF,EAZE;AAAA,eAkCdC,WAlCc,GAkCA,EAlCA;AAAA;;AAGF,mBAARC,QAAQ,GAAE;AACjB,cAAG,KAAKC,SAAR,EACA;AACI,mBAAO,KAAKA,SAAZ;AACH;;AACD,eAAKA,SAAL,GAAiB,IAAIL,WAAJ,EAAjB;AACA,iBAAO,KAAKK,SAAZ;AACH;;AAKMC,QAAAA,aAAa,GAAE;AAClB,eAAKJ,SAAL,GAAiB,EAAjB,CADkB,CAElB;;AAEA;AAAA;AAAA,0CAAYK,aAAZ,CAA0B,cAA1B;AACH;;AAEMC,QAAAA,aAAa,CAACC,GAAD,EACpB;AACI,cAAGA,GAAG,CAACC,MAAJ,GAAWV,WAAW,CAACW,YAA1B,EACA;AACI,gBAAIC,QAAiB,GAAG,IAAIjB,QAAJ,EAAxB;AACAiB,YAAAA,QAAQ,CAACC,IAAT,GAAgB,CAAhB;AACAD,YAAAA,QAAQ,CAACE,GAAT,GAAeC,IAAI,CAACC,GAAL,KAAW,EAAX,GAAcC,IAAI,CAACC,MAAL,KAAc,SAA3C;AACAT,YAAAA,GAAG,CAACU,IAAJ,CAASP,QAAT;AACA;AAAA;AAAA,4CAAYL,aAAZ,CAA0B,YAA1B;AACH;AACJ;;AAGMa,QAAAA,gBAAgB,CAACR,QAAD,EAAUS,QAAV,EACvB;AACI,cAAGA,QAAH,EACA;AACI,iBAAKlB,WAAL,CAAiBgB,IAAjB,CAAsBP,QAAtB;AACH,WAHD,MAIA;AACI,iBAAI,IAAIU,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAC,KAAKnB,WAAL,CAAiBO,MAAjC,EAAwCY,CAAC,EAAzC,EACA;AACI,kBAAIC,IAAI,GAAE,KAAKpB,WAAL,CAAiBmB,CAAjB,CAAV;;AACA,kBAAGC,IAAI,CAACT,GAAL,IAAYF,QAAQ,CAACE,GAAxB,EACA;AACI,qBAAKX,WAAL,CAAiBqB,MAAjB,CAAwBF,CAAxB;AACA;AACH;AACJ;AACJ;AACJ;;AAEMG,QAAAA,UAAU,CAACvB,SAAD,EAAWwB,WAAX,EACjB;AACI,eAAI,IAAIJ,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAACpB,SAAS,CAACQ,MAA1B,EAAiCY,CAAC,EAAlC,EACA;AACI,gBAAIK,IAAI,GAAGzB,SAAS,CAACoB,CAAD,CAApB;;AACA,iBAAI,IAAIM,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAACF,WAAW,CAAChB,MAA5B,EAAmCkB,CAAC,EAApC,EACA;AACI,kBAAIC,YAAY,GAAGH,WAAW,CAACE,CAAD,CAA9B;;AACA,kBAAGD,IAAI,CAACb,GAAL,IAAWe,YAAY,CAACf,GAA3B,EACA;AACIY,gBAAAA,WAAW,CAACF,MAAZ,CAAmBI,CAAnB,EAAqB,CAArB;AACA;AACH;AACJ;AACJ;;AACD,eAAKzB,WAAL,GAAmB,EAAnB;AACA;AAAA;AAAA,0CAAYI,aAAZ,CAA0B,YAA1B;AACH;;AAvEoB,O,UAEdF,S,mBAWOM,Y,GAAe,C;;0BA6DpBhB,Q,GAAN,MAAMA,QAAN,CAAc;AAAA;AAAA,eACjBkB,IADiB,GACH,CADG;AAAA,eAEjBC,GAFiB,GAEJ,EAFI;AAAA,UAED;;;AAFC,O","sourcesContent":["import { _decorator, find, instantiate, Prefab, resources } from \"cc\";\r\nimport { clientEvent } from \"../utils/clientEvent\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"CardManager\")\r\nexport class CardManager {\r\n    private dicPanel = {};\r\n    static _instance:CardManager;\r\n    static get instance(){\r\n        if(this._instance)\r\n        {\r\n            return this._instance;\r\n        }\r\n        this._instance = new CardManager();\r\n        return this._instance;\r\n    }\r\n\r\n    public cardArray = [];\r\n    public static maxCardCount = 7;\r\n\r\n    public initCardArray(){\r\n        this.cardArray = [];\r\n        //起手5张\r\n       \r\n        clientEvent.dispatchEvent(\"InitCardInfo\")\r\n    }\r\n\r\n    public creatCardInfo(arr)\r\n    {\r\n        if(arr.length<CardManager.maxCardCount)\r\n        {\r\n            let cardInfo:CardInfo = new CardInfo();\r\n            cardInfo.type = 2;\r\n            cardInfo.uid =(Date.now()+\"\"+Math.random()*100000000)\r\n            arr.push(cardInfo);\r\n            clientEvent.dispatchEvent(\"UpdateCard\")\r\n        }\r\n    }\r\n\r\n    public chooseCards = []\r\n    public updateChooseCard(cardInfo,isChoose)\r\n    {\r\n        if(isChoose)\r\n        {\r\n            this.chooseCards.push(cardInfo);\r\n        }else\r\n        {\r\n            for(let i = 0;i<this.chooseCards.length;i++)\r\n            {\r\n                let item =this.chooseCards[i];\r\n                if(item.uid == cardInfo.uid)\r\n                {\r\n                    this.chooseCards.splice(i);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public updateCard(cardArray,haveCardArr)\r\n    {\r\n        for(let i = 0;i<cardArray.length;i++)\r\n        {\r\n            let info = cardArray[i];\r\n            for(let j = 0;j<haveCardArr.length;j++)\r\n            {\r\n                let haveCardInfo = haveCardArr[j];\r\n                if(info.uid== haveCardInfo.uid)\r\n                {\r\n                    haveCardArr.splice(j,1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.chooseCards = [];\r\n        clientEvent.dispatchEvent(\"UpdateCard\")\r\n    }\r\n}\r\n\r\nexport class CardInfo{\r\n    type:number = 0;\r\n    uid:string = \"\";//唯一id\r\n}"]}