{"version":3,"sources":["file:///E:/cocos/project/CrazyGame/assets/res/scripts/battle/Fighter.ts"],"names":["_decorator","Component","instantiate","Node","resources","v3","Vec3","FightetModel","BattleManager","ccclass","property","Fighter","speed","_index","_team","_soliderInfo","_startPos","_target","_fighterModel","_isAttack","_direction","_currentPos","_forward","_tagetPos","offset","coolTime","init","index","team","soliderInfo","startPos","self","node","position","rotationY","eulerAngles","scheduleOnce","load","soliderName","err","prefab","_model","getComponent","updateinfo","playAni","model","addChild","_findEnemy","instance","gameManager","getWallNode","lateUpdate","dt","isGameOver","targetPos","x","y","z","set","subtract","diss","Math","floor","length","console","log","soliderAttack","random","normalize","multiplyScalar","add","damage","onDamage"],"mappings":"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","sourcesContent":["import { _decorator, Component, instantiate, Node, Prefab, resources, v3, Vec2, Vec3 } from 'cc';\r\nimport { FightetModel } from './FightetModel';\r\nimport { BattleManager } from '../manager/BattleManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Fighter')\r\nexport class Fighter extends Component {\r\n    @property(Node)\r\n    model:Node =null!;\r\n\r\n    public speed = 5;\r\n\r\n\r\n    private _index:number;\r\n    private _team:number;\r\n    private _soliderInfo:any;\r\n    private _startPos;\r\n    private _target;\r\n    private _fighterModel:FightetModel;\r\n\r\n    public init(index:number,team:number,soliderInfo:any,startPos)\r\n    {\r\n        let self  = this;\r\n        this._index = index;\r\n        this._team = team;\r\n        this._soliderInfo = soliderInfo;\r\n        this._startPos = startPos;\r\n\r\n        this.node.position = startPos;\r\n\r\n        let rotationY = 0\r\n        if(team == 2)\r\n        {\r\n            rotationY = 0;\r\n        }else if(team==1)\r\n        {\r\n            rotationY = 180;\r\n        }\r\n        this.node.eulerAngles = v3(0,rotationY,0)\r\n        this.scheduleOnce(()=>{\r\n            resources.load(\"prefab/solider/\"+soliderInfo.soliderName, (err, prefab: Prefab) => {\r\n                if (err) {\r\n                    return;\r\n                }\r\n                let _model = instantiate(prefab);\r\n               this._fighterModel = _model.getComponent(FightetModel);\r\n               this._fighterModel.updateinfo(self)\r\n               this._fighterModel.playAni(\"idle\")\r\n                self.model.addChild(_model)\r\n            })\r\n        },0.2)\r\n        this._findEnemy();\r\n    }\r\n\r\n    public get team(){\r\n        return this._team;\r\n    }\r\n\r\n    private _findEnemy(){\r\n        this._isAttack = false;\r\n        this._target = BattleManager.instance.gameManager.getWallNode(1);\r\n\r\n    }\r\n\r\n    private _isAttack:boolean = false;\r\n    private _direction:Vec3 = new Vec3();\r\n    private _currentPos:Vec3 = new Vec3();\r\n    private _forward:Vec3 = new Vec3();\r\n    private _tagetPos:Vec3 = new Vec3();\r\n    private offset:Vec3 = new Vec3();\r\n    private coolTime:number =0.5;\r\n    lateUpdate(dt: number): void {\r\n        if(BattleManager.instance.isGameOver)\r\n        {\r\n            return;\r\n        }\r\n        if(this._target)\r\n        {\r\n            let targetPos = v3(this._target.position.x,this._target.position.y,this._target.position.z);\r\n            this._tagetPos.set(targetPos)\r\n            this.offset =  this._tagetPos.subtract(this.node.position)\r\n            let diss = Math.floor(this.offset.length()-5);\r\n            console.log(\"diss:\"+diss)\r\n            if(diss<= 3)\r\n            {\r\n                console.log(\"攻击范围内:\"+this.coolTime);\r\n                // this._isAttack = true;\r\n                if(this.coolTime<=0)\r\n                {\r\n                    this.soliderAttack();\r\n                }else{\r\n                    this.coolTime-= dt;\r\n                }\r\n                \r\n            }\r\n            else\r\n            {\r\n                if( this._fighterModel)\r\n                {   \r\n                    this._fighterModel.playAni(\"run\",true);\r\n                }\r\n                this._direction.set(this.offset);\r\n                this._direction.x += Math.floor(Math.random()*0.2)-0.1;\r\n                this._direction.z += Math.floor(Math.random()*0.2)-0.1;\r\n                this._direction.normalize()\r\n                this._direction.y = 0\r\n              \r\n                this._forward.set(this._direction);\r\n                this._forward.normalize();\r\n                // this.node.forward = this._forward;\r\n                \r\n                this._direction = this._direction.multiplyScalar(this.speed/100);\r\n                this._direction.y = 0;\r\n                this._currentPos.set(this.node.position);\r\n                this._currentPos.add(this._direction);\r\n\r\n                this.node.position = this._currentPos;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private soliderAttack (){\r\n        if(this.coolTime>0)\r\n        {\r\n            this._fighterModel.playAni(\"idle\",true);\r\n            return;\r\n        }\r\n\r\n        if(this._fighterModel)\r\n        {\r\n            this._isAttack = true;\r\n            this._fighterModel.playAni(\"attack\",false,()=>{\r\n                this._isAttack = false;\r\n                if(this._target)\r\n                {\r\n                    let damage = 50;\r\n                    BattleManager.instance.onDamage(damage);\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}