{"version":3,"sources":["file:///E:/cocos/project/CrazyGame/assets/script/Panel/GamePanel.ts"],"names":["_decorator","Component","instantiate","Label","Node","ProgressBar","clientEvent","BattleManager","CardManager","Card","FightManager","ccclass","property","GamePanel","cardNodeList","cardNum","onEnable","on","initBattleInfo","initCardInfo","updateCard","updateEnemyInfo","node","EventType","TOUCH_START","_onTouchStart","TOUCH_MOVE","_onTouchMove","TOUCH_CANCEL","_onTouchEnd","TOUCH_END","onDisable","off","_onTouchCancel","event","instance","chooseCards","length","touchStart","touchMove","touchEnd","touchCancel","cardInfo","cardArry","i","info","initData","card","checkCardInfo","cardinfo","updateData","cardList","children","forEach","getComponent","updateChoose","updateRoleinfo","enemyBattleInfo","curreentHp","maxHp","hp","txtDfHp","string","toString","dfHpPro","progress","battleInfo","txtMyHp","por","myHpPro","console","log","creatCard","init","initCardView","removeAllChildren","maxCount","maxCardCount","setIndex","addChild","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAoBC,MAAAA,S,OAAAA,S;AAAuBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;;AACrEC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,I,iBAAAA,I;;AACAC,MAAAA,Y,iBAAAA,Y;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U;;2BAGjBa,S,WADZF,OAAO,CAAC,WAAD,C,UAGHC,QAAQ,CAACT,KAAD,C,UAERS,QAAQ,CAACP,WAAD,C,UAGRO,QAAQ,CAACT,KAAD,C,UAERS,QAAQ,CAACP,WAAD,C,UAGRO,QAAQ,CAACR,IAAD,C,UAGRQ,QAAQ,CAACR,IAAD,C,2BAhBb,MACaS,SADb,SAC+BZ,SAD/B,CACyC;AAAA;AAAA;;AACrC;AADqC;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAkB7Ba,YAlB6B,GAkBd,EAlBc;AAAA,eAoBrCC,OApBqC,GAoB3B,CApB2B;AAAA;;AAoBzB;AAEZ;AACA;AACA;AACUC,QAAAA,QAAQ,GAAS;AACvB;AAAA;AAAA,0CAAYC,EAAZ,CAAe,gBAAf,EAAiC,KAAKC,cAAtC,EAAsD,IAAtD;AACA;AAAA;AAAA,0CAAYD,EAAZ,CAAe,cAAf,EAA+B,KAAKE,YAApC,EAAkD,IAAlD;AACA;AAAA;AAAA,0CAAYF,EAAZ,CAAe,YAAf,EAA6B,KAAKG,UAAlC,EAA8C,IAA9C;AACA;AAAA;AAAA,0CAAYH,EAAZ,CAAe,eAAf,EAA+B,KAAKI,eAApC,EAAoD,IAApD;AAEA,eAAKC,IAAL,CAAUL,EAAV,CAAab,IAAI,CAACmB,SAAL,CAAeC,WAA5B,EAAyC,KAAKC,aAA9C,EAA6D,IAA7D;AACA,eAAKH,IAAL,CAAUL,EAAV,CAAab,IAAI,CAACmB,SAAL,CAAeG,UAA5B,EAAwC,KAAKC,YAA7C,EAA2D,IAA3D;AACA,eAAKL,IAAL,CAAUL,EAAV,CAAab,IAAI,CAACmB,SAAL,CAAeK,YAA5B,EAA0C,KAAKC,WAA/C,EAA4D,IAA5D;AACA,eAAKP,IAAL,CAAUL,EAAV,CAAab,IAAI,CAACmB,SAAL,CAAeO,SAA5B,EAAuC,KAAKD,WAA5C,EAAyD,IAAzD;AACH;;AACSE,QAAAA,SAAS,GAAS;AACxB;AAAA;AAAA,0CAAYC,GAAZ,CAAgB,cAAhB,EAAgC,KAAKb,YAArC,EAAmD,IAAnD;AACA;AAAA;AAAA,0CAAYa,GAAZ,CAAgB,gBAAhB,EAAkC,KAAKd,cAAvC,EAAuD,IAAvD;AACA;AAAA;AAAA,0CAAYc,GAAZ,CAAgB,YAAhB,EAA8B,KAAKZ,UAAnC,EAA+C,IAA/C;AACA;AAAA;AAAA,0CAAYY,GAAZ,CAAgB,eAAhB,EAAgC,KAAKX,eAArC,EAAqD,IAArD;AAEA,eAAKC,IAAL,CAAUU,GAAV,CAAc5B,IAAI,CAACmB,SAAL,CAAeC,WAA7B,EAA0C,KAAKC,aAA/C,EAA8D,IAA9D;AACA,eAAKH,IAAL,CAAUU,GAAV,CAAc5B,IAAI,CAACmB,SAAL,CAAeG,UAA7B,EAAyC,KAAKC,YAA9C,EAA4D,IAA5D;AACA,eAAKL,IAAL,CAAUU,GAAV,CAAc5B,IAAI,CAACmB,SAAL,CAAeK,YAA7B,EAA2C,KAAKK,cAAhD,EAAgE,IAAhE;AACA,eAAKX,IAAL,CAAUU,GAAV,CAAc5B,IAAI,CAACmB,SAAL,CAAeO,SAA7B,EAAwC,KAAKD,WAA7C,EAA0D,IAA1D;AACH;;AACSJ,QAAAA,aAAa,CAACS,KAAD,EAAoB;AACvC,cAAI;AAAA;AAAA,0CAAYC,QAAZ,CAAqBC,WAArB,CAAiCC,MAAjC,GAA0C,CAA9C,EAAiD;AAC7C;AAAA;AAAA,8CAAaF,QAAb,CAAsBG,UAAtB,CAAiCJ,KAAjC;AACH;AAEJ;;AACSP,QAAAA,YAAY,CAACO,KAAD,EAAoB;AACtC,cAAI;AAAA;AAAA,0CAAYC,QAAZ,CAAqBC,WAArB,CAAiCC,MAAjC,GAA0C,CAA9C,EAAiD;AAC7C;AAAA;AAAA,8CAAaF,QAAb,CAAsBI,SAAtB,CAAgCL,KAAhC;AACH;AACJ;;AACSL,QAAAA,WAAW,CAACK,KAAD,EAAoB;AACrC,cAAI;AAAA;AAAA,0CAAYC,QAAZ,CAAqBC,WAArB,CAAiCC,MAAjC,GAA0C,CAA9C,EAAiD;AAC7C;AAAA;AAAA,8CAAaF,QAAb,CAAsBK,QAAtB,CAA+BN,KAA/B;AACH;AACJ;;AACSD,QAAAA,cAAc,CAACC,KAAD,EAAoB;AACxC,cAAI;AAAA;AAAA,0CAAYC,QAAZ,CAAqBC,WAArB,CAAiCC,MAAjC,GAA0C,CAA9C,EAAiD;AAC7C;AAAA;AAAA,8CAAaF,QAAb,CAAsBM,WAAtB,CAAkCP,KAAlC;AACH;AACJ,SAnEoC,CAqErC;;;AACAf,QAAAA,YAAY,GAAG;AACX,cAAIuB,QAAQ,GAAG;AAAA;AAAA,0CAAYP,QAAZ,CAAqBQ,QAApC;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACL,MAA7B,EAAqCO,CAAC,EAAtC,EAA0C;AACtC,gBAAIC,IAAI,GAAGH,QAAQ,CAACE,CAAD,CAAnB;AACA,iBAAK9B,YAAL,CAAkB8B,CAAlB,EAAqBE,QAArB,CAA8BF,CAA9B,EAAiCC,IAAjC;AACA,gBAAIE,IAAI,GAAG,KAAKjC,YAAL,CAAkB8B,CAAlB,CAAX;AACH;;AAED,eAAKI,aAAL;AACH,SA/EoC,CAgFrC;;;AACA5B,QAAAA,UAAU,GAAG;AACT,cAAIuB,QAAQ,GAAG;AAAA;AAAA,0CAAYR,QAAZ,CAAqBQ,QAApC;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK9B,YAAL,CAAkBuB,MAAtC,EAA8CO,CAAC,EAA/C,EAAmD;AAC/C,gBAAIG,IAAI,GAAG,KAAKjC,YAAL,CAAkB8B,CAAlB,CAAX;AACA,gBAAIK,QAAQ,GAAGN,QAAQ,CAACC,CAAD,CAAvB;;AACA,gBAAIG,IAAI,CAACL,QAAL,IAAiB,IAAjB,IAAyBO,QAAQ,IAAE,IAAvC,EAA6C;AACzCF,cAAAA,IAAI,CAACG,UAAL,CAAgBD,QAAhB;AACH;;AACD,gBAAIL,CAAC,IAAI,KAAK9B,YAAL,CAAkBuB,MAAlB,GAA2B,CAApC,EAAuC;AACnC,mBAAKW,aAAL;AACH;AACJ;;AAED,eAAKG,QAAL,CAAcC,QAAd,CAAuBC,OAAvB,CAAgC/B,IAAD,IAAU;AACrC,gBAAIyB,IAAU,GAAGzB,IAAI,CAACgC,YAAL;AAAA;AAAA,6BAAjB,CADqC,CAErC;;AACAP,YAAAA,IAAI,CAACQ,YAAL;AACH,WAJD;AAKH,SAnGoC,CAoGrC;;;AACArC,QAAAA,cAAc,GAAG;AACb,eAAKG,eAAL;AACA,eAAKmC,cAAL;AACH;;AACOnC,QAAAA,eAAe,GAAG;AACtB,cAAIoC,eAAe,GAAG;AAAA;AAAA,8CAActB,QAAd,CAAuBsB,eAA7C;AACA,cAAIC,UAAU,GAAGD,eAAe,CAACC,UAAjC;AACA,cAAIC,KAAK,GAAGF,eAAe,CAACG,EAA5B;AAEA,eAAKC,OAAL,CAAaC,MAAb,GAAsBL,eAAe,CAACG,EAAhB,CAAmBG,QAAnB,EAAtB;AACA,eAAKC,OAAL,CAAaC,QAAb,GAAwBP,UAAU,GAAGC,KAArC;AACH;;AAEOH,QAAAA,cAAc,GAAG;AACrB,cAAIU,UAAU,GAAG;AAAA;AAAA,8CAAc/B,QAAd,CAAuB+B,UAAxC;AACA,cAAIR,UAAU,GAAGQ,UAAU,CAACR,UAA5B;AACA,cAAIC,KAAK,GAAGO,UAAU,CAACN,EAAvB;AAEA,eAAKO,OAAL,CAAaL,MAAb,GAAsBJ,UAAU,CAACK,QAAX,EAAtB;AACA,cAAIK,GAAG,GAAGV,UAAU,GAAGC,KAAvB;AACA,eAAKU,OAAL,CAAaJ,QAAb,GAAwBG,GAAxB;AACH,SA1HoC,CA2HrC;AACA;AACA;AACA;;;AACOpB,QAAAA,aAAa,GAAG;AACnBsB,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,eAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK9B,YAAL,CAAkBuB,MAAtC,EAA8CO,CAAC,EAA/C,EAAmD;AAC/C,gBAAIG,IAAI,GAAG,KAAKjC,YAAL,CAAkB8B,CAAlB,CAAX;;AACA,gBAAIG,IAAI,IAAI,CAACA,IAAI,CAACL,QAAlB,EAA4B;AACxBK,cAAAA,IAAI,CAACyB,SAAL,CAAe5B,CAAf;AACA;AACH;AACJ;AACJ;;AACM6B,QAAAA,IAAI,GAAG;AACV;AACA,eAAKC,YAAL;AACH;;AACOA,QAAAA,YAAY,GAAG;AACnB,eAAK5D,YAAL,GAAoB,EAApB;AACA,eAAKqC,QAAL,CAAcwB,iBAAd;AACA,cAAIC,QAAQ,GAAG;AAAA;AAAA,0CAAYC,YAA3B;;AACA,eAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,QAApB,EAA8BhC,CAAC,EAA/B,EAAmC;AAC/B,gBAAItB,IAAI,GAAGpB,WAAW,CAAC,KAAK6C,IAAN,CAAtB;AACA,gBAAIA,IAAU,GAAGzB,IAAI,CAACgC,YAAL;AAAA;AAAA,6BAAjB;AACAP,YAAAA,IAAI,CAAC0B,IAAL;AACA1B,YAAAA,IAAI,CAAC+B,QAAL,CAAclC,CAAd;AACA,iBAAKO,QAAL,CAAc4B,QAAd,CAAuBzD,IAAvB;AACA,iBAAKR,YAAL,CAAkBkE,IAAlB,CAAuBjC,IAAvB;AACH;AACJ;;AAzJoC,O;;;;;iBAGpB,I;;;;;;;iBAEM,I;;;;;;;iBAGN,I;;;;;;;iBAEM,I;;;;;;;iBAGN,I;;;;;;;iBAGJ,I","sourcesContent":["import { _decorator, Camera, Component, EventTouch, instantiate, Label, Node, ProgressBar, toDegree } from 'cc';\r\nimport { clientEvent } from '../utils/clientEvent';\r\nimport { BattleManager } from '../manager/BattleManager';\r\nimport { CardManager } from '../manager/CardManager';\r\nimport { Card } from './Card';\r\nimport { FightManager } from '../manager/FightManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GamePanel')\r\nexport class GamePanel extends Component {\r\n    //敌方信息\r\n    @property(Label)\r\n    txtDfHp: Label = null!;\r\n    @property(ProgressBar)\r\n    dfHpPro: ProgressBar = null!;\r\n\r\n    @property(Label)\r\n    txtMyHp: Label = null!;\r\n    @property(ProgressBar)\r\n    myHpPro: ProgressBar = null!;\r\n\r\n    @property(Node)\r\n    cardList: Node = null!;\r\n\r\n    @property(Node)\r\n    card: Node = null!;\r\n\r\n    private cardNodeList = [];\r\n\r\n    cardNum = 3;//8张卡牌\r\n\r\n    // protected onLoad(): void {\r\n    //     clientEvent.on(\"InitCardInfo\",this.initCardInfo,this);\r\n    // }\r\n    protected onEnable(): void {\r\n        clientEvent.on(\"InitBattleInfo\", this.initBattleInfo, this)\r\n        clientEvent.on(\"InitCardInfo\", this.initCardInfo, this)\r\n        clientEvent.on(\"UpdateCard\", this.updateCard, this);\r\n        clientEvent.on(\"UpdateEnemyHp\",this.updateEnemyInfo,this);\r\n\r\n        this.node.on(Node.EventType.TOUCH_START, this._onTouchStart, this);\r\n        this.node.on(Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\r\n        this.node.on(Node.EventType.TOUCH_CANCEL, this._onTouchEnd, this);\r\n        this.node.on(Node.EventType.TOUCH_END, this._onTouchEnd, this);\r\n    }\r\n    protected onDisable(): void {\r\n        clientEvent.off(\"InitCardInfo\", this.initCardInfo, this)\r\n        clientEvent.off(\"InitBattleInfo\", this.initBattleInfo, this)\r\n        clientEvent.off(\"UpdateCard\", this.updateCard, this);\r\n        clientEvent.off(\"UpdateEnemyHp\",this.updateEnemyInfo,this);\r\n\r\n        this.node.off(Node.EventType.TOUCH_START, this._onTouchStart, this);\r\n        this.node.off(Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\r\n        this.node.off(Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);\r\n        this.node.off(Node.EventType.TOUCH_END, this._onTouchEnd, this);\r\n    }\r\n    protected _onTouchStart(event: EventTouch) {\r\n        if (CardManager.instance.chooseCards.length > 0) {\r\n            FightManager.instance.touchStart(event);\r\n        }\r\n\r\n    }\r\n    protected _onTouchMove(event: EventTouch) {\r\n        if (CardManager.instance.chooseCards.length > 0) {\r\n            FightManager.instance.touchMove(event);\r\n        }\r\n    }\r\n    protected _onTouchEnd(event: EventTouch) {\r\n        if (CardManager.instance.chooseCards.length > 0) {\r\n            FightManager.instance.touchEnd(event);\r\n        }\r\n    }\r\n    protected _onTouchCancel(event: EventTouch) {\r\n        if (CardManager.instance.chooseCards.length > 0) {\r\n            FightManager.instance.touchCancel(event);\r\n        }\r\n    }\r\n\r\n    //初始化卡牌\r\n    initCardInfo() {\r\n        let cardInfo = CardManager.instance.cardArry;\r\n        for (let i = 0; i < cardInfo.length; i++) {\r\n            let info = cardInfo[i];\r\n            this.cardNodeList[i].initData(i, info);\r\n            let card = this.cardNodeList[i];\r\n        }\r\n\r\n        this.checkCardInfo();\r\n    }\r\n    //更新卡牌\r\n    updateCard() {\r\n        let cardArry = CardManager.instance.cardArry;\r\n        for (let i = 0; i < this.cardNodeList.length; i++) {\r\n            let card = this.cardNodeList[i];\r\n            let cardinfo = cardArry[i];\r\n            if (card.cardInfo == null || cardinfo==null) {\r\n                card.updateData(cardinfo);\r\n            }\r\n            if (i == this.cardNodeList.length - 1) {\r\n                this.checkCardInfo();\r\n            }\r\n        }\r\n\r\n        this.cardList.children.forEach((node) => {\r\n            let card: Card = node.getComponent(Card);\r\n            // card.isChoose = false;\r\n            card.updateChoose();\r\n        })\r\n    }\r\n    //初始化战斗信息\r\n    initBattleInfo() {\r\n        this.updateEnemyInfo();\r\n        this.updateRoleinfo();\r\n    }\r\n    private updateEnemyInfo() {\r\n        let enemyBattleInfo = BattleManager.instance.enemyBattleInfo;\r\n        let curreentHp = enemyBattleInfo.curreentHp;\r\n        let maxHp = enemyBattleInfo.hp;\r\n\r\n        this.txtDfHp.string = enemyBattleInfo.hp.toString();\r\n        this.dfHpPro.progress = curreentHp / maxHp;\r\n    }\r\n\r\n    private updateRoleinfo() {\r\n        let battleInfo = BattleManager.instance.battleInfo;\r\n        let curreentHp = battleInfo.curreentHp;\r\n        let maxHp = battleInfo.hp;\r\n\r\n        this.txtMyHp.string = curreentHp.toString();\r\n        let por = curreentHp / maxHp;\r\n        this.myHpPro.progress = por\r\n    }\r\n    // protected start(): void {\r\n    //     this.init();\r\n    // }\r\n    //检测卡牌信息\r\n    public checkCardInfo() {\r\n        console.log(\"checkCardInfo\");\r\n        for (let i = 0; i < this.cardNodeList.length; i++) {\r\n            let card = this.cardNodeList[i];\r\n            if (card && !card.cardInfo) {\r\n                card.creatCard(i);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    public init() {\r\n        // this.initBattleInfo();\r\n        this.initCardView();\r\n    }\r\n    private initCardView() {\r\n        this.cardNodeList = [];\r\n        this.cardList.removeAllChildren();\r\n        let maxCount = CardManager.maxCardCount;\r\n        for (let i = 0; i < maxCount; i++) {\r\n            let node = instantiate(this.card);\r\n            let card: Card = node.getComponent(Card);\r\n            card.init();\r\n            card.setIndex(i);\r\n            this.cardList.addChild(node);\r\n            this.cardNodeList.push(card);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}