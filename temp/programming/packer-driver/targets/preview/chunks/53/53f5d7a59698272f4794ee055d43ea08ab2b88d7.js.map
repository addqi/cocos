{"version":3,"sources":["file:///E:/cocos/project/CrazyGame/assets/script/manager/FightManager.ts"],"names":["_decorator","Component","instantiate","PhysicsSystem","resources","v3","CardManager","ConfigManager","Solider","ccclass","property","FightManager","_dicPanel","camera","soliderParent","dicSolider","dicSoliderSrc","_index","instance","_instance","touchStart","event","ray","screenPointToRay","getLocation","x","y","raycastClosest","touchMove","touchEnd","touch","console","log","getLocationX","getLocationY","raycastClosestResult","hitPoint","pos","z","cardList","chooseCards","cardInfo","getSoliderInfo","updateCard","cardArry","addSolider","team","load","err","prefab","error","index","node","addChild","soliderScript","getComponent","init","hasOwnProperty","cardarr","obj","queryAll","type","key","info","cardNum","length","touchCancel"],"mappings":"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","sourcesContent":["import { _decorator, Camera, CameraComponent, Component, EventTouch, find, instantiate, Node, PhysicsSystem, Prefab, resources, v3, Vec3 } from 'cc';\r\nimport { clientEvent } from '../utils/clientEvent';\r\nimport { CardManager } from './CardManager';\r\nimport { GamePanel } from '../Panel/GamePanel';\r\nimport { GameManager } from './GameManager';\r\nimport { ConfigManager } from './ConfigManager';\r\nimport { CSVManager } from '../utils/csvManager';\r\nimport { Solider } from '../Solider';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('FightManager')\r\nexport class FightManager extends Component {\r\n    static _instance: FightManager = null;\r\n\r\n\r\n    private _dicPanel: any = {};\r\n    camera: CameraComponent;\r\n    soliderParent: Node;//士兵父节点\r\n    public dicSolider: any = {};//士兵字典\r\n    public dicSoliderSrc: any = {};//士兵脚本字典\r\n\r\n\r\n    static get instance() {\r\n        if (!this._instance) {\r\n            this._instance = new FightManager();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    public touchStart(event: EventTouch) {\r\n        let camera = this.camera;\r\n\r\n        if (camera && event) {\r\n            let ray = camera.screenPointToRay(event.getLocation().x, event.getLocation().y);\r\n            if (ray) {\r\n                if (!PhysicsSystem.instance.raycastClosest(ray)) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public touchMove(event: EventTouch) {\r\n        let camera = this.camera;\r\n\r\n\r\n        if (camera && event) {\r\n            let ray = camera.screenPointToRay(event.getLocation().x, event.getLocation().y);\r\n            if (ray) {\r\n                if (!PhysicsSystem.instance.raycastClosest(ray)) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public touchEnd(touch: EventTouch) {\r\n        console.log(\"鼠标结束\")\r\n        let camera = this.camera;\r\n        if (camera && touch) {\r\n            let ray = camera.screenPointToRay(touch.getLocationX(), touch.getLocationY());\r\n            console.log(\"ray:\" + ray)\r\n            if (ray) {\r\n                PhysicsSystem.instance.raycastClosest(ray);\r\n                let raycastClosestResult = PhysicsSystem.instance.raycastClosestResult;\r\n                console.log(\"ray:\" + raycastClosestResult.hitPoint);\r\n                let pos: Vec3 = v3(raycastClosestResult.hitPoint.x, 0, raycastClosestResult.hitPoint.z);\r\n                console.log(\"pos:\" + pos)\r\n                let cardList = CardManager.instance.chooseCards;\r\n                let cardInfo = this.getSoliderInfo(cardList);\r\n                CardManager.instance.updateCard(cardList, CardManager.instance.cardArry);\r\n                console.log(\"准备创建:\")\r\n                if (cardInfo) {\r\n                    this.addSolider(1,pos,cardInfo);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _index: number = 1;//小兵id\r\n    public addSolider(team:number,pos: Vec3,cardInfo){\r\n        console.log(\"可以创建一个:\")\r\n        resources.load(\"prefab/solider/solider\", (err, prefab: Prefab) => {\r\n            if (err) {\r\n                console.error(\"加载错误:\", err);\r\n                return;\r\n            }\r\n            console.log(\"成功创建一个\");\r\n\r\n            let index= this._index++;\r\n           \r\n            let node = instantiate(prefab) as Node;\r\n            this.soliderParent.addChild(node);\r\n            let soliderScript= node.getComponent(Solider);\r\n            soliderScript.init(index,team,pos,cardInfo);\r\n            \r\n\r\n            if(!this.dicSolider.hasOwnProperty(team)){\r\n                this.dicSolider[team] = {};\r\n            }\r\n            this.dicSolider[team][index] = node;\r\n        });\r\n    }\r\n\r\n\r\n    //获取小兵信息\r\n    public getSoliderInfo(cardarr) {\r\n        let cardInfo = cardarr[0];\r\n        let obj: any = ConfigManager.instance.queryAll(\"card\", \"type\", cardInfo.type);\r\n        if (obj) {\r\n            for (let key in obj) {\r\n                let info = obj[key];\r\n                if (info.cardNum == cardarr.length) {\r\n                    return info;\r\n                }\r\n            }\r\n        }\r\n        return cardInfo;//临时返回\r\n    }\r\n    public touchCancel(event: EventTouch) {\r\n        let camera = this.camera;\r\n\r\n        if (camera && event) {\r\n            let ray = camera.screenPointToRay(event.getLocation().x, event.getLocation().y);\r\n            if (ray) {\r\n                if (!PhysicsSystem.instance.raycastClosest(ray)) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n"]}